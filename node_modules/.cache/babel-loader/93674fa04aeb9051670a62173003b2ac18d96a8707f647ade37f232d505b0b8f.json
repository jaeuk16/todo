{"ast":null,"code":"var _jsxFileName = \"/Users/wodnr/Desktop/react/todo/src/component/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [Id, SetId] = useState('');\n  const [PassWord, SetPassWord] = useState('');\n  const navigate = useNavigate();\n\n  // 서버와 연결\n  const ButtonClick = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/login%60\", {\n        // 비동기 \n        id: Id,\n        password: PassWord\n      });\n      console.log(response);\n      if (response.status === 200) {\n        navigate(\"/\");\n        // status가 200이라면 로그인 성공, \"/Main\"으로 보낸다. p\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \" \\uB85C\\uADF8\\uC778 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"id\",\n        onChange: e => SetId(e.target.value)\n        // e를 보낸다. SetId에 변화된 값을 넣는다.\n        ,\n        placeholder: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => SetPassWord(e.target.value),\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ButtonClick,\n        children: \"\\uD655\\uC778 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"dOxlpv7XyBGeHjaJSafiqYcn7FU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","Id","SetId","PassWord","SetPassWord","navigate","ButtonClick","response","post","id","password","console","log","status","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/wodnr/Desktop/react/todo/src/component/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './Login.css';\n\n\nconst Login = () => {\n    const [Id, SetId] = useState('');\n    const [PassWord, SetPassWord] = useState('');\n    const navigate = useNavigate();\n\n    // 서버와 연결\n    const ButtonClick = async () => {\n        try {\n            const response = await axios.post(\"http://localhost:8080/login%60\", {\n                // 비동기 \n                id: Id,\n                password: PassWord,\n            });\n            console.log(response);\n            if (response.status === 200) {\n                navigate(\"/\")\n                // status가 200이라면 로그인 성공, \"/Main\"으로 보낸다. p\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div>\n            <form >\n                <div className=\"title\"> 로그인 </div>\n                <input\n                    type=\"id\"\n                    onChange={(e) => SetId(e.target.value)}\n                    // e를 보낸다. SetId에 변화된 값을 넣는다.\n                    placeholder=\"아이디\"\n                />\n                <input\n                    type=\"password\"\n                    onChange={(e) => SetPassWord(e.target.value)}\n                    placeholder=\"비밀번호\"\n                />\n                <button \n                    onClick={ButtonClick}\n                >\n                    확인 </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,gCAAgC,EAAE;QAChE;QACAC,EAAE,EAAER,EAAE;QACNS,QAAQ,EAAEP;MACd,CAAC,CAAC;MACFQ,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QACzBR,QAAQ,CAAC,GAAG,CAAC;QACb;MACJ;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClCtB,OAAA;QACIuB,IAAI,EAAC,IAAI;QACTC,QAAQ,EAAGC,CAAC,IAAKrB,KAAK,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK;QACrC;QAAA;QACAC,WAAW,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFtB,OAAA;QACIuB,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC7CC,WAAW,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFtB,OAAA;QACI6B,OAAO,EAAErB,WAAY;QAAAS,QAAA,EACxB;MACM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAApB,EAAA,CA7CKD,KAAK;EAAA,QAGUJ,WAAW;AAAA;AAAAiC,EAAA,GAH1B7B,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}