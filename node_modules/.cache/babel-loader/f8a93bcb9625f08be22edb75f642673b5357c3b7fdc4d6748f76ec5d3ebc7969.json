{"ast":null,"code":"var _jsxFileName = \"/Users/wodnr/Desktop/react/todo/src/component/Edit/Edit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const addTodo = () => {\n    if (newTask.trim() !== '') {\n      // 공백이 아니라면\n      setTasks([...tasks, newTask]); // tasks 현재의 투두 리스트를 나타내는 배열. setTasks 해당 배열을 업데이트하는 함수\n      setNewTask(''); // ?\n    }\n  };\n  const removeTodo = index => {\n    // 투두 삭제\n    // 전개연산자 : 배열이나 객체를 펼쳐서 개별 요소로 분리하는 데 사용되는 JavaScript의 문법\n    const updatedTasks = [...tasks]; // ...전개연산자, 원본 배열을 직접 수정하지 않고 새로운 배열을 생성\\\\\\\\\\\n    // splice : JavaScript의 배열에서 사용되는 메서드로, 배열의 내용을 추가, 제거\n    updatedTasks.splice(index, 1); // 복사한 배열에 인덱스 1개를 제거한다.\n    setTasks(updatedTasks); // 제거 후 보여주는 리스트 \n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" \\uC624\\uB298 \\uD560 \\uC77C\\uC744 \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask /* 입력 필드의 현재 값은 newTask 상태 변수와 바인딩되어 있다 */,\n\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(index),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Edit, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Edit","_s","tasks","setTasks","newTask","setNewTask","addTodo","trim","removeTodo","index","updatedTasks","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","task","_c","$RefreshReg$"],"sources":["/Users/wodnr/Desktop/react/todo/src/component/Edit/Edit.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Edit = () => {\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n\n    const addTodo = () => {\n        if (newTask.trim() !== '') { // 공백이 아니라면\n            setTasks([...tasks, newTask]); // tasks 현재의 투두 리스트를 나타내는 배열. setTasks 해당 배열을 업데이트하는 함수\n            setNewTask(''); // ?\n        }\n    };\n\n    const removeTodo = (index) => { // 투두 삭제\n        // 전개연산자 : 배열이나 객체를 펼쳐서 개별 요소로 분리하는 데 사용되는 JavaScript의 문법\n        const updatedTasks = [...tasks]; // ...전개연산자, 원본 배열을 직접 수정하지 않고 새로운 배열을 생성\\\\\\\\\\\n        // splice : JavaScript의 배열에서 사용되는 메서드로, 배열의 내용을 추가, 제거\n        updatedTasks.splice(index, 1);   // 복사한 배열에 인덱스 1개를 제거한다.\n        setTasks(updatedTasks); // 제거 후 보여주는 리스트 \n    };\n    return (\n        <div>\n            <h3> 오늘 할 일을 작성해 주세요! </h3>\n            <div>\n                <input\n                    type=\"text\"\n                    value={newTask} /* 입력 필드의 현재 값은 newTask 상태 변수와 바인딩되어 있다 */\n                    \n                    onChange={(e) => setNewTask(e.target.value)}\n                />\n                <button onClick={addTodo}>추가</button>\n            </div>\n            <ul>\n                {tasks.map((task, index) => (\n                    <li key={index}>\n                        {task}\n                        <button onClick={() => removeTodo(index)}>삭제</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Edit;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAAE;MACzBJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/BC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,MAAMG,UAAU,GAAIC,KAAK,IAAK;IAAE;IAC5B;IACA,MAAMC,YAAY,GAAG,CAAC,GAAGR,KAAK,CAAC,CAAC,CAAC;IACjC;IACAQ,YAAY,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAG;IACjCN,QAAQ,CAACO,YAAY,CAAC,CAAC,CAAC;EAC5B,CAAC;EACD,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QACIkB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEd,OAAQ,CAAC;;QAEhBe,QAAQ,EAAGC,CAAC,IAAKf,UAAU,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFjB,OAAA;QAAQuB,OAAO,EAAEhB,OAAQ;QAAAM,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACNjB,OAAA;MAAAa,QAAA,EACKV,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEf,KAAK,kBACnBV,OAAA;QAAAa,QAAA,GACKY,IAAI,eACLzB,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACC,KAAK,CAAE;UAAAG,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFhDP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAf,EAAA,CAxCKD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}